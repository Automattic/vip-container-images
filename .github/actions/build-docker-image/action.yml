name: Build Docker image
description: Builds a Docker image
inputs:
  context:
    description: The directory containing the Dockerfile
    required: true
  file:
    description: The Dockerfile to use
    required: false
  platforms:
    description: The platforms to build for
    required: false
    default: linux/amd64,linux/arm64
  push:
    description: Whether to push the image to the registry
    required: true
  primaryTag:
    description: The primary tag to use for the image
    required: true
  tags:
    description: The tags to use for the image
    required: false
  args:
    description: List of build-time variables
    required: false
  cache-from:
    description: List of external cache sources for buildx
    required: false
  cache-to:
    description: List of cache export destinations for buildx
    required: false
  no-cache:
    description: Do not use cache when building the image
    required: false
    default: 'false'
  registry:
    description: The registry to use
    required: false
    default: https://ghcr.io
  username:
    description: The username to use for the registry
    required: false
    default: ${{ github.actor }}
  password:
    description: The password to use for the registry
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
      if: ${{ inputs.push }}

    - name: Build and push container image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: |
          ${{ inputs.primaryTag }}
          ${{ inputs.tags }}
        build-args: ${{ inputs.args }}
        cache-from: ${{ inputs.cache-from }}
        cache-to: ${{ inputs.cache-to }}
        no-cache: ${{ inputs.no-cache }}

    - name: Load image to local Docker
      uses: docker/build-push-action@v5
      with:
        load: true
        push: false
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        tags: |
          ${{ inputs.primaryTag }}
          ${{ inputs.tags }}
        build-args: ${{ inputs.args }}

    - name: Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.primaryTag }}
        format: template
        template: "@.github/actions/build-docker-image/markdown.tpl"
        output: trivy.md
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    - name: Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.primaryTag }}
        format: table
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

    - name: Find Trivy Scan Report comment
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: ${{ inputs.primaryTag }}
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: trivy.md
        edit-mode: replace
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
