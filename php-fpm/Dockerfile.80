FROM alpine:3.16.3@sha256:b95359c2505145f16c6aa384f9cc74eeff78eb36d308ca4fd902eeeb0a0b161b

RUN \
    echo "@testing https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories && \
    apk add --no-cache ca-certificates curl tar xz openssl less bash mariadb-client su-exec shadow git jq icu-data-full ghostscript php8 php8-fpm php8-pear \
        php8-pecl-apcu \
        php8-bcmath \
        php8-calendar \
        php8-ctype \
        php8-curl \
        php8-dom \
        php8-exif \
        php8-fileinfo \
        php8-ftp \
        php8-gd \
        php8-pecl-gmagick@testing \
        php8-gmp \
        php8-iconv \
        php8-intl \
        php8-json \
        php8-mbstring \
        php8-pecl-mcrypt \
        php8-pecl-memcache \
        php8-pecl-memcached \
        php8-mysqli \
        php8-mysqlnd \
        php8-opcache \
        php8-openssl \
        php8-pcntl \
        php8-pdo \
        php8-pdo_sqlite \
        php8-phar \
        php8-posix \
        php8-session \
        php8-shmop \
        php8-simplexml \
        php8-soap \
        php8-sockets \
        php8-sodium \
        php8-sqlite3 \
        php8-pecl-ssh2 \
        php8-sysvsem \
        php8-sysvshm \
        php8-pecl-timezonedb \
        php8-tokenizer \
        php8-pecl-xdebug \
        php8-xml \
        php8-xmlreader \
        php8-xmlwriter \
        php8-zip

RUN ln -s /usr/sbin/php-fpm8 /usr/sbin/php-fpm

RUN \
    pecl update-channels && \
    rm -rf /tmp/pear ~/.pearrc

RUN adduser -u 82 -D -S -G www-data www-data
RUN install -d -m 0777 -o www-data -g www-data /var/www/html

RUN \
    wget -O /usr/local/bin/phpunit https://phar.phpunit.de/phpunit-9.phar && chmod 0755 /usr/local/bin/phpunit && \
    wget -O /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod 0755 /usr/local/bin/wp && \
    wget -q https://getcomposer.org/installer -O - | php -- --install-dir=/usr/bin/ --filename=composer

ENV WP_CLI_CONFIG_PATH /config/wp-cli.yaml
ENV PHP_INI_DIR /etc/php8

COPY rootfs-common/ /
COPY rootfs80/ /


WORKDIR /var/www/html
STOPSIGNAL SIGQUIT
EXPOSE 9000
ENTRYPOINT ["docker-php-entrypoint"]
CMD ["run.sh"]
