FROM ubuntu:22.04 AS build
RUN \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get -q update && \
    apt-get -y install eatmydata && \
    eatmydata apt-get install -y curl lsb-release ca-certificates gnupg --no-install-recommends && \
    echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list && \
    curl -sSL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x71DAEAAB4AD4CAB6" | gpg --dearmor > /etc/apt/trusted.gpg.d/ppa-ondrej-php.gpg && \
    eatmydata apt-get -q update && \
    eatmydata apt-get install -y php8.2-dev php8.2-xml && \
    eatmydata apt-get install -y php-pear --no-install-recommends && \
    pecl install timezonedb && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

FROM ubuntu:22.04

# Extra PHP extensions: msgpack (because of memcache)
# We lack: newrelic
RUN \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get -q update && \
    apt-get -y install eatmydata && \
    mkdir -p /usr/lib/libeatmydata && ln -s -t /usr/lib/libeatmydata/ /usr/lib/$(uname -m)-linux-gnu/libeatmydata.so* && \
    eatmydata apt-get -y upgrade && \
    eatmydata apt-get install -y curl lsb-release ca-certificates gnupg --no-install-recommends && \
    echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list && \
    curl -sSL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x71DAEAAB4AD4CAB6" | gpg --dearmor > /etc/apt/trusted.gpg.d/ppa-ondrej-php.gpg && \
    eatmydata apt-get -q update && \
    eatmydata apt-get install -y less git jq mysql-client openssl wget vim nano && \
    eatmydata apt-get install -y ghostscript msmtp --no-install-recommends && \
    eatmydata apt-get install -y --no-install-recommends \
        php8.2-cli php8.2-fpm \
        php8.2-apcu php8.2-bcmath php8.2-curl php8.2-gd php8.2-gmagick php8.2-gmp php8.2-gnupg php8.2-intl php8.2-igbinary php8.2-mbstring php8.2-mcrypt \
        php8.2-memcache php8.2-memcached php8.2-mysql php8.2-soap php8.2-sqlite3 php8.2-ssh2 php8.2-xdebug php8.2-xml php8.2-zip && \
    eatmydata apt-get install -y php-pear --no-install-recommends && \
    phpdismod ffi gettext readline sysvmsg xsl xdebug && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* && \
    eatmydata apt-get autoremove --purge -y && \
    ln -s /usr/sbin/php-fpm8.2 /usr/sbin/php-fpm

RUN curl -L -o mydumper.deb https://github.com/mydumper/mydumper/releases/download/v0.16.3-6/mydumper_0.16.3-6.bullseye_amd64.deb && \
    echo "46c404eae9efab7928faf099c5b17a58 mydumper.deb" | md5sum -c - && \
    dpkg -i mydumper.deb && \
    rm mydumper.deb


RUN \
    usermod -d /home/www-data -s /bin/bash www-data && \
    install -d -D -m 0750 -o www-data -g www-data /home/www-data && \
    install -d -D -m 0777 -o www-data -g www-data /var/www/html && \
    install -d -D -m 0755 -o www-data -g www-data /run/php && \
    install -d -D -m 0755 -o root -g root /usr/local/share

RUN \
    wget -O /usr/local/bin/phpunit https://phar.phpunit.de/phpunit-9.phar && chmod 0755 /usr/local/bin/phpunit && \
    wget -O /usr/local/bin/wp.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
        php -r '(new Phar("/usr/local/bin/wp.phar"))->extractTo("/usr/local/share/wp");' && \
        mv /usr/local/bin/wp.phar /usr/local/bin/wp && \
        chmod 0755 /usr/local/bin/wp && \
    wget -q https://getcomposer.org/installer -O - | php -- --install-dir=/usr/bin/ --filename=composer

ENV WP_CLI_CONFIG_PATH=/config/wp-cli.yaml

RUN \
    ARCH="$(arch)"; \
    LATEST=$(curl -w '%{url_effective}' -ILsS https://github.com/Automattic/cron-control-runner/releases/latest -o /dev/null | sed -e 's|^.*/||'); \
    if [ "${ARCH}" = "arm64" ] || [ "${ARCH}" = "aarch64" ]; then \
        ARCH="arm64"; \
    elif [ "${ARCH}" = "x86_64" ] || [ "${ARCH}" = "amd64" ]; then \
        ARCH="amd64"; \
    else \
        echo "(!) Unsupported architecture: ${ARCH}"; \
        exit 1; \
    fi && \
    curl -SL "https://github.com/Automattic/cron-control-runner/releases/download/${LATEST}/cron-control-runner-linux-${ARCH}" -o /usr/bin/cron-control-runner && \
    chmod +x /usr/bin/cron-control-runner

COPY --from=build /usr/lib/php/20220829/timezonedb.so /usr/lib/php/20220829/timezonedb.so
COPY rootfs/ /
COPY rootfs-php/ /etc/php/8.2/

RUN phpenmod timezonedb

WORKDIR /var/www/html
STOPSIGNAL SIGQUIT
EXPOSE 9000
ENTRYPOINT ["docker-php-entrypoint"]
CMD ["run.sh"]
